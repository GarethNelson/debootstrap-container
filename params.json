{"name":"Debootstrap-container","tagline":"simple way of running multiple debian containers on a (openvz) VPS instead of docker ","body":"debootstrap-container\r\n=====================\r\n\r\n<img src=\"https://raw.githubusercontent.com/coderofsalvation/debootstrap-container/master/.res/logo.png\"/>\r\n\r\nsimple way of running multiple debian containers on a (openvz) VPS \r\n\r\n### Why\r\n\r\nI am a huge fan of [docker](http://docker.io) but unfortunately I had to do multiple projects inside one VPS server.\r\nI could not get docker working, and solutions like [sekexe](https://github.com/jpetazzo/sekexe) or jailkit pointed into more possible hassle.\r\nI had to go another road to satisfy my needs:\r\n\r\n* I want to install packages in a container, *outside* the real host\r\n* I want to easily import, export, delete containers\r\n* I want to run node- or apache/lighttpd applications in a container\r\n* I want to ssh to a container and feel like I have root-access\r\n* I want to be somewhat compatible with docker\r\n\r\n### Howto\r\n\r\n    $ debootstrap-container add mycontainer\r\n    [x] created container in /srv/containers\r\n    [x] adding user\r\n    [x] please enter password for ssh-user 'mycontainer': foo\r\n    [x] done..now login using ssh with login/pass: mycontainer/foo\r\n    $ ssh mycontainer@localhost\r\n    root@mycontainer# whoami\r\n    root@mycontainer# root\r\n    root@mycontainer# passwd (enter my newpassword)\r\n    root@mycontainer# apt-get install python2\r\n    root@mycontainer# exit\r\n\r\nnow the funpart is that python2 is only installed in the container.\r\nremoving /srv/containers means all packages in the container are removed as well.\r\n\r\n    $ debootstrap-container export /src/containers/mycontainer /tmp/mycontainer.tar.bz2\r\n    [x] analyzing additional installed packages + backing up dirs: srv etc opt\r\n    [x] written /tmp/lemon.tar.gz\r\n\r\nWe now exported our container to a tarball.\r\n\r\n    $ debootstrap-container import /src/containers/mycontainer /tmp/mycontainer.tar.bz2  # overwrites container\r\n\r\nWe just updated our container with a tarball\r\n\r\n    $ debootstrap-container import /src/containers/mycontainer2 /tmp/mycontainer.tar.bz2 # creates clone\r\n\r\nWe just updated imported our container to a new tarball\r\n    \r\n    $ ssh mycontainer2@localhost\r\n    root@mycontainer# whoami (..and so on..)\r\n\r\n\r\n### Docker compatibility\r\n\r\nIt *should* be compatible with docker, just tar your jail-dir like so:\r\n\r\n    tar -C /srv/containers/mycontainer -c . | docker import myname/mycontainer\r\n\r\n### Conclusion\r\n\r\nThis is definately not secure or as cool as docker, but it is an tidy way to deploy\r\napplications on a openvz container (which doesnt run docker).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}